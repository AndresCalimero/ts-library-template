name: Publish

on:
  repository_dispatch:
  release:
    types:
      - created

jobs:
  publish-library:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest tag name
        uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
          route: GET /repos/:repository/releases/latest
          repository: ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest tag name (parse JSON)
        id: parse_get_latest_release
        uses: gr2m/get-json-paths-action@v1.x
        with:
          json: ${{ steps.get_latest_release.outputs.data }}
          tag_name: tag_name

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.parse_get_latest_release.outputs.tag_name }}

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build production bundle
        run: npm run build

      - name: Publish to npm
        if: env.NODE_AUTH_TOKEN != 0
        run: npm publish || true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Prepare publish to GPR
        uses: actions/setup-node@v1
        with:
          node-version: '12'
          registry-url: 'https://npm.pkg.github.com'

      - name: Publish to GPR
        run: npm publish || true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest tag name
        uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
          route: GET /repos/:repository/releases/latest
          repository: ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest tag name (parse JSON)
        id: parse_get_latest_release
        uses: gr2m/get-json-paths-action@v1.x
        with:
          json: ${{ steps.get_latest_release.outputs.data }}
          tag_name: tag_name

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.parse_get_latest_release.outputs.tag_name }}

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Install dependencies
        run: npm ci

      - name: Build docs
        run: npm run build:docs

      - name: Publish to GitHub Pages
        if: env.ACCESS_TOKEN != 0
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ env.ACCESS_TOKEN }}
          publish_dir: ./docs
          enable_jekyll: false
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
